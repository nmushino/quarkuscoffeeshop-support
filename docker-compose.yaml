version: '3'

services:

  robotshop-db:
    image: postgres:11
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=robotshopuser
      - POSTGRES_PASSWORD=redhat-21
      - POSTGRES_DB=robotshopdb
    volumes:
      - ./init-postgresql.sql:/docker-entrypoint-initdb.d/init-postgresql.sql:Z
    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    
  zookeeper:
    image: quay.io/strimzi/kafka:0.39.0-kafka-3.6.1
    command: [
      "sh", "-c",
      "bin/zookeeper-server-start.sh config/zookeeper.properties"
    ]
    ports:
      - "2181:2181"
    environment:
      LOG_DIR: /tmp/logs
    networks: 
      - kafka_network

  kafka:
    image: quay.io/strimzi/kafka:0.39.0-kafka-3.6.1
    command: [
      "sh", "-c",
      "bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT} --override inter.broker.listener.name=$${KAFKA_INTER_BROKER_LISTENER_NAME} --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP}"
    ]
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      LOG_DIR: "/tmp/logs"
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"      
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    networks: 
      - kafka_network

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 3000:8080
    depends_on:
      - kafka
    restart: always
    environment:
      TZ: Asia/Tokyo
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks: 
      - kafka_network

#  registry:
#    image: apicurio/apicurio-registry-mem
#    ports:
#      - "8081:8080"
#    environment:
#      KAFKA_BOOTSTRAP_SERVERS: localhost:9092
#      APPLICATION_ID: registry_id
#      APPLICATION_SERVER: localhost:9000

#networks:
#  my-network:
#    name: robotshop-network

networks:
  kafka_network:
    name: kafka_docker_net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 192.168.10.0/24
